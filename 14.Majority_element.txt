https://leetcode.com/problems/majority-element-ii/description/


Given an integer array of size n, find all elements that appear more than âŒŠ n/3 âŒ‹ times.

Example 1:
Input: nums = [3,2,3]
Output: [3]

Example 2:
Input: nums = [1]
Output: [1]

Example 3:
Input: nums = [1,2]
Output: [1,2]


class Solution:
    def majorityElement(self, nums: List[int]) -> List[int]:
        counts = {}
        for num in nums:
            counts[num] = counts.get(num, 0) + 1

        # Find all elements in the hash table that have a count greater than n/3.
        result = []
        for num, count in counts.items():
            if count > len(nums) // 3:
                result.append(num)

        return result